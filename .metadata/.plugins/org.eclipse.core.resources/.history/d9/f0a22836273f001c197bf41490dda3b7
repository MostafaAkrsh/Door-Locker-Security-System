#include "helpers.h"

/*extern variables */
extern uint8 password1[PASS_SIZE];
extern uint8 password2[PASS_SIZE];
extern uint8 passwordCheck[PASS_SIZE];

/*function to check the two passwords are identical or no*/
uint8 check_identical(uint8* pass1, uint8* pass2) {
	int pass_index;
	for (pass_index = 0; pass_index < PASS_SIZE; pass_index++) {
		if (pass1[pass_index] != pass2[pass_index]) {
			return NO;
		}
	}

	return YES;
}
/* function to make the user chooses the password */
void enter_password(void) {
	LCD_clearScreen();
	LCD_displayString("Please Enter Password:");
	LCD_moveCursor(1, 5);
	uint8 key = 0;
	uint8 password_index = 0;
	while (password_index != PASS_SIZE) {
		key = KEYPAD_getPressedKey();
		LCD_displayCharacter('*');
		password1[password_index] = key;
		password_index++;
		_delay_ms(500); /* Press time */
	}
}
/* function to make the user reenter the password to make sure that he entered it as he intended */
uint8 reenter_password(void) {
	LCD_clearScreen();
	LCD_displayString("Please Reenter Password:");
	LCD_moveCursor(1, 5);
	uint8 key = 0;
	uint8 password_index = 0;

	while (password_index != PASS_SIZE) {
		key = KEYPAD_getPressedKey();
		LCD_displayCharacter('*');
		password2[password_index] = key;
		password_index++;
		_delay_ms(500); /* Press time */
	}

	uint8 identical = check_identical(password1, password2);

	if (identical) {
		LCD_displayCharacter('1');

		UART_sendByte('!');
		LCD_displayCharacter('2');

		uint8 key = UART_recieveByte();
		LCD_displayCharacter('3');

		if (key == '!')
			UART_sendString(password1);
	}

	return identical;
}

/* display on the lcd that the passwords are not the same  */
void password_not_identical(void) {
	LCD_clearScreen();
	LCD_displayString("inputs are not identical");
	LCD_moveCursor(1, 0);
	LCD_displayString("Please Enter same inputs twice.");
	_delay_ms(3000);
}

/* function to display the options list *
 * + Open Door                          *
 * - Change Password                    */
Option main_options(void) {
	LCD_clearScreen();
	LCD_displayString("+ : Open Door");
	LCD_moveCursor(1, 0);
	LCD_displayString("- : Change Password");

	uint8 key = 0;
	while (1) {
		key = KEYPAD_getPressedKey();

		if (key == '+') {
			_delay_ms(500); /* Press time */
			return OPENDOOR;
			break;
		}
		if (key == '-') {
			UART_sendByte('-');
			_delay_ms(500); /* Press time */
			return CHANGEPW;
			break;
		}
	}

}

/* function asks the user to enter the saved password*/
uint8 enter_saved_password(void) {
	LCD_clearScreen();
	LCD_displayString("Please Enter Password:");
	LCD_moveCursor(1, 5);
	uint8 key = 0;
	uint8 password_index = 0;
	while (password_index != PASS_SIZE) {
		key = KEYPAD_getPressedKey();
		LCD_displayCharacter('*');
		passwordCheck[password_index] = key;
		password_index++;
		_delay_ms(500); /* Press time */
	}

	UART_sendByte('+');
	key = UART_recieveByte();
	if (key == '!')
		UART_sendString(passwordCheck);

	UART_sendByte('+');

	key = UART_recieveByte();

	if (key == '+') {
		return 1;
	}

	return 0;
}

/* function to run the motor to open the door */
void open_door(void) {
	LCD_clearScreen();
	LCD_displayString("Opening Door");

	UART_recieveByte();
}

/* ask the user wheather he wants to close the door */
uint8 ask_to_close(void) {
	LCD_clearScreen();
	LCD_displayString("Door is open");
	LCD_moveCursor(1, 0);
	LCD_displayString("Click + to close it");

	uint8 key = 0;

	key = KEYPAD_getPressedKey();
	if (key == '+') {
		UART_sendByte('+');
		key = UART_recieveByte();
		return 1;
	}
	return 0;
}

/* run the motor a-cw to close the door */
void close_door(void) {
	LCD_clearScreen();
	LCD_displayString("Door is closed");
	_delay_ms(2000); /* Press time */

}
