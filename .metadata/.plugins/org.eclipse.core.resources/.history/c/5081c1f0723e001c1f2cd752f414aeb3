#include "helpers.h"


uint8 g_pass[PASS_SIZE];


uint8 EEPROM_pass[PASS_SIZE];
uint8 EE[PASS_SIZE];

uint8 key;

int main()
{
	LCD_init();
	LCD_displayString("meme");

	/* Buzzer Initialization */
	Buzzer_init(PORTB_ID ,PIN0_ID);

	/* Motor Initialization */
	DcMotor_Init(PORTB_ID,PIN5_ID,PIN4_ID);

	/* EEPROM Init */
	EEPROM_init();

	/* Uart Initialization */
	UART_Config uconfig;

	uconfig.RxEn = ON;
	uconfig.TxEn = ON;
	uconfig.EMPInt = OFF;
	uconfig.RxInt = OFF;
	uconfig.TxInt = OFF;
	uconfig.doublespeed = ON;
	uconfig.parity = EVEN;
	uconfig.stopbits = ONE;
	uconfig.databits = EIGHT;
	uconfig.baudrate = 9600;

	UART_init(&uconfig);

	LCD_displayString("meme");

	//Buzzer_ON();
	//DcMotor_Rotate(CW,10);
	State state = IDLE;

	while(1)
	{
		switch(state)
			{
			case IDLE:
				key = UART_recieveByte();
				if( key=='!' )
				{
					LCD_clearScreen();
					state = SAVE_PASSWORD;
				}
			break;
			case SAVE_PASSWORD:
				UART_sendByte('!');
				UART_receiveString(g_pass);
				LCD_displayString(g_pass);
				EEPROM_writeString(g_pass, PASS_SIZE);
				LCD_displayString("written");
				state = CHECK_PASSWORD;

				break;
			case CHECK_PASSWORD:
				LCD_clearScreen();

				key = UART_recieveByte();
				LCD_displayCharacter(key);
				if(key == '+'){
				UART_sendByte('!');

				UART_receiveString(g_pass);
				EEPROM_readString(EEPROM_pass, PASS_SIZE);
				LCD_moveCursor(1,0);


				while(check_identical(EE,g_pass))
				{

				}
				if()
				{
					LCD_displayString("identical");

					state = OPEN_DOOR;
				}
				else
				{
					LCD_displayString("not");
					_delay_ms(1000);
				}
				}
				break;
			case OPEN_DOOR:
				while (1){
					UART_sendByte('+');

				key = UART_recieveByte();
				if(key == '+')
					break;
				}
				UART_sendByte('+');
				break;
			case CLOSE_DOOR:
				break;
			case THIEF:
				break;
			case REENTER_PASSWORD:

				break;
	}

	}
}
